#
# Wm independent hotkeys
#

# Terminal emulator
super + Return
	xterm -b 20
# Dmenu program launcher
super + r
	dmenu_run
# Rofi program launcher
super + Tab
 	sh $HOME/.local/bin/appmnu
# Eww dashboard open/close
super + {_,shift + }p
    sh $HOME/.local/bin/dshbrd {open,close}
# NNN file manager
super + e
    dolphin
# Nmtui
super + n
    bspc rule -a \* -o state=floating && xterm -e nmtui
# Pavucontrol
super + v
    pavucontrol
# Launch firefox
super + b
    firefox
# Floating terminal
super + z
    bspc rule -a \* -o state=floating && xterm -b 20
# Show help
super + slash
    $HOME/.config/sxhkd/scripts/sxhkd-help
# Make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'
# Record the entire screen
super + shift + r
    sh $HOME/.local/bin/record.sh; notify-send 'Record' 'Started...'
# Stop recording
super + shift + u
    sh $HOME/.local/bin/stoprecord.sh; notify-send 'Record' 'Stopped.'

#
# Bspwm hotkeys
#

# Quit/restart bspwm
super + {alt, shift + }c
	bspc {quit,wm -r};

# Close and kill
super + {_,shift + }q
	bspc node -{k,c}

# Alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# Send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# Swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# State/flags
#

# Set the window state (tiled, pseudotiled, floating, fullscreen)
super + {t,shift + t,f,s}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Set the node flags (marked, locked, sticky, private)
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# Focus/swap
#

# Focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# Focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# Focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# Focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# Focus the last node/desktop
super + grave
	bspc {node,desktop} -f last

# Focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# Focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# Preselect
#

# Preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# Preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# Cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# Cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# Preselect with mouse
super + ctrl + {_,shift + } button3
 	bspc node {,$(xdotool getmouselocation | awk -F'[ :]' '\{ print $8 \}')} \ -p $(~/.config/sxhkd/scripts/pointer_region.sh {active,all})

#
# Move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-30 0,0 30,0 -30,30 0}

#
# Misc
#

# Close screen
super + shift + x
   sleep 0.5; xset dpms force standby

# Screenshot
super + Print
    flameshot gui

#scratchpad
super + =
    bspc node $DDTERMWID --flag hidden --focus $DDTERMWID.!hidden

#Volume Control
XF86AudioLowerVolume
	amixer set Master 5%-; dunstify --icon=$HOME/.config/dunst/images/volume.png -h string:x-canonical-private-synchronous:audio "Volume: "  -h int:value:"`amixer get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1`"
XF86AudioRaiseVolume
	amixer set Master 5%+; dunstify --icon=$HOME/.config/dunst/images/volume.png -h string:x-canonical-private-synchronous:audio "Volume: "  -h int:value:"`amixer get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1`"
XF86AudioMute
    amixer -D pulse set Master 1+ toggle; dunstify "Muted"
# Manage brightness
XF86MonBrightness{Up,Down}
    brightnessctl set 5%{+,-}; dunstify "Brightness: " --icon=$HOME/.config/dunst/images/brightness.png -h int:value:"`light | cut -d '.' -f 1`"
